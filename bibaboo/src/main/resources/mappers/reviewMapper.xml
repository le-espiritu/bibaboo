<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="review">
	<insert id="enrollReview">
		INSERT INTO review(user_id, order_category_id, alter_id, category_id, content, score)
		VALUES(#{userId}, #{orderCategoryId}, #{alterId}, #{categoryId}, #{content}, #{score})
	</insert>
	
	<update id="updateAvgScore">
		UPDATE alterations
		SET avg_score = (SELECT AVG(score)
		                FROM review
		                WHERE alter_id = #{alterId}
		                AND enable =1)
		WHERE id = #{alterId}
	</update>
	
	<update id="updateCategoryAvgScore">
		UPDATE category
		SET avg_score = (SELECT AVG(score)
						FROM review
						WHERE category_id = #{categoryId}
						AND enable =1)
		WHERE id = #{categoryId}
	</update>
	
	<select id="getReview" resultType="com.project.bibaboo.domain.review.dto.ReviewDTO">
		SELECT r.id, r.user_id, u.email as userEmail, r.order_category_id, r.alter_id, c.name as categoryName, c.id as categoryId, r.content, r.score, r.create_date 
		FROM review r
		JOIN category c
		ON r.category_id = c.id
		JOIN user u
		ON r.user_id = u.id
		WHERE r.alter_id = #{alterId}
		AND r.enable =1
		ORDER BY r.create_date DESC
		LIMIT #{startOffset},#{amount}
	</select>
	
	<select id="getReviewTotal" resultType="int">
		SELECT COUNT(*)
		FROM review
		WHERE alter_id = #{alterId}
		AND enable =1
	</select>
	
	<insert id="insertPhotoNameList">
		<!-- keyProperty의 값은 parameterType(DTO) 의 멤버(setter)명과 동일해야 한다.  -->
		<selectKey resultType="int" keyProperty="id" order="BEFORE">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO review_photo(review_id, name)
		VALUES
			<foreach collection="reviewPhotos" item="reviewPhotoDTO" separator=",">
				(#{id},#{reviewPhotoDTO.name})
			</foreach>
	</insert>
	
	<select id="getReviewPhoto" resultType="com.project.bibaboo.domain.review.dto.ReviewPhotoDTO">
		SELECT id, review_id, name
		FROM review_photo
		WHERE review_id = #{reviewId}
	</select>
	
	<select id="reviewExistsCheck" resultType="boolean">
		SELECT EXISTS
		(SELECT * FROM review WHERE user_id = #{userId} AND order_category_id = #{orderCategoryId})
	</select>
	
	<update id="updateReview">
		UPDATE review
		SET content = #{content}, score = #{score}
		WHERE id = #{id}
	</update>
	
	<select id="getReviewForUpdate" resultType="com.project.bibaboo.domain.review.dto.ReviewDTO">
		SELECT r.id, r.user_id, u.email as userEmail, r.order_category_id, r.alter_id, r.category_id, c.name as categoryName, c.id as categoryId, r.content, r.score, r.create_date
		FROM review r
		JOIN category c
		ON r.category_id = c.id
		JOIN user u
		ON r.user_id = u.id
		WHERE r.id = #{id}
	</select>
	
	<update id="deleteReview">
		UPDATE review
		SET enable =0
		WHERE id = #{reviewId}
	</update>
	
</mapper>