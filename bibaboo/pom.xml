<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.project</groupId>
  <artifactId>bibaboo</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>bibaboo</name>
  
  <properties>
  	<jdk-version>1.8</jdk-version>
  	<spring-version>5.1.5.RELEASE</spring-version> <!-- jdk11버전이라서 스프링 프레임워크 5버전 이상 사용해야함 -->
  	<org.aspectj-version>1.9.5</org.aspectj-version>
  	<org.slf4j-version>1.6.6</org.slf4j-version>
  	<org.springframework.security-version>4.2.1.RELEASE</org.springframework.security-version>
  </properties>
  
  
  <dependencies>
  
  	<!-- Spring-context -->
  	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-context</artifactId>
	  <version>${spring-version}</version>
	  <exclusions>
			<!-- Exclude Commons Logging in favor of SLF4j -->
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	
	<!-- Spring-webmvc -->
  	<dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-webmvc</artifactId>
  		<version>${spring-version}</version>
  	</dependency>
  	
  	<!-- @Inject를 지원하는 라이브러리 -->
	<dependency>
		<groupId>javax.inject</groupId>
		<artifactId>javax.inject</artifactId>
		<version>1</version>
	</dependency>
  	
  	<!-- servlet -->
  	<dependency>
	  <groupId>javax.servlet</groupId>
	  <artifactId>javax.servlet-api</artifactId>
	  <version>3.1.0</version>
	  <scope>provided</scope>
	</dependency>
	
	<!-- jsp -->
  	<dependency>
	  <groupId>javax.servlet.jsp</groupId>
	  <artifactId>javax.servlet.jsp-api</artifactId>
	  <version>2.3.1</version>
	  <scope>provided</scope>
	</dependency>
	
	<!-- jstl -->
	<dependency>
	  <groupId>javax.servlet</groupId>
	  <artifactId>jstl</artifactId>
	  <version>1.2</version>
	</dependency>
	
	<!-- tiles 라이브러리  -->
	<dependency>
		<groupId>org.apache.tiles</groupId>
		<artifactId>tiles-servlet</artifactId>
		<version>3.0.8</version>
	</dependency>
	<dependency>
		<groupId>org.apache.tiles</groupId>
		<artifactId>tiles-jsp</artifactId>
		<version>3.0.8</version>
	</dependency>
	
	<!-- spring jdbc 라이브러리  -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jdbc</artifactId>
		<version>${spring-version}</version>
	</dependency>
	
	<!-- 트랜잭션 사용하기 위한것 (선언적 트랜잭션)  -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-tx</artifactId>
		<version>${spring-version}</version>
	</dependency>
	
	<!-- mysql jdbc 드라이버 라이브러리  -->
	<!-- mysql 버전 8.x.x일 경우  -->
	<dependency>
	  <groupId>mysql</groupId>
	  <artifactId>mysql-connector-java</artifactId>
	  <version>8.0.28</version>
	</dependency>
	
	<!-- basic data source 라이브러리 추가-->
	<!-- DataSource는 커넥션 풀을 관리하는 객체이다.
	ConnectionPool은 DBMS와 커넥션을 미리 많이 맺어둔 객체이다.
	DataSource를 이용해 커넥션을 얻어오고 반납하는 등의 작업을 수행한다.
	여기서 사용하는 DataSource는 Apache에서 제공하는 commons-dbcp2이다. -->
	<dependency>
	    <groupId>org.apache.commons</groupId>
	    <artifactId>commons-dbcp2</artifactId>
	    <version>2.7.0</version>
	</dependency>
	
	<!-- MyBatis라이브러리 -->
	<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis</artifactId>
		<version>3.5.2</version>
	</dependency>
	<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis-spring</artifactId>
		<version>2.0.2</version>
	</dependency>
	
	<!-- 파일 업로드 -->
	<dependency>
	    <groupId>commons-io</groupId>
	    <artifactId>commons-io</artifactId>
	    <version>2.6</version>
	</dependency>
	<dependency>
	    <groupId>commons-fileupload</groupId>
	    <artifactId>commons-fileupload</artifactId>
	    <version>1.4</version>
	</dependency>
	
	
  </dependencies>
  
  
  <build>
  	<plugins>
  		<!-- maven-eclipse-plugin : maven 프로젝트를 eclipse 프로젝트로 변환  -->
  		<plugin>
			<artifactId>maven-eclipse-plugin</artifactId>  
			<version>2.9</version>
			<configuration>
				<additionalProjectnatures>
					<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
				</additionalProjectnatures>
				<additionalBuildcommands>
					<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
				</additionalBuildcommands>
				<downloadSources>true</downloadSources>
				<downloadJavadocs>true</downloadJavadocs>
			</configuration>
		</plugin>
  	
  		<!-- maven-compiler-plugin : maven 프로젝트를 빌드하기 위한 JDK 선택 플러그인  -->
  		<plugin>
  			<groupId>org.apache.maven.plugins</groupId>
  			<artifactId>maven-compiler-plugin</artifactId>
  			<version>3.6.1</version>
  			<configuration>
  				<source>${jdk-version}</source>
  				<target>${jdk-version}</target>
  				<encoding>utf-8</encoding>
  			</configuration>
  		</plugin>
  		
  		<!-- exec-maven-plugin : maven 프로젝트 빌드 시 외부 프로그램을 사용하기 위한 플러그인  -->
  		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>exec-maven-plugin</artifactId>
			<version>1.2.1</version>
			<configuration>
				<mainClass>org.test.int1.Main</mainClass>
			</configuration>
		</plugin>
  	</plugins>
  </build>
  
</project>